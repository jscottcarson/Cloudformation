{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Creates a Management & Security, Development, QA, and Production VPC that each contain public and private subnets in 2 AZ's subnets. Additionally, adds a VPC Peering Connection from M&S VPC to each. Also creates an S3 bucket for account Clouddtrail logging and a Cloudtrail log. ",
	"Parameters": {
		"DevVPCBaseRange": {
			"Description": "Enter first two numbers of the CIDR Block Range. Example 10.48",
			"Type": "String",
			"Default": "12.0",
			"MinLength": "3",
			"MaxLength": "10",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be valid IP CIDR range of the form x.x"
		},
		"DevVPCEndingRange": {
			"Description": "Enter the last numbers of the CIDR Block Range. Example 200.0/22",
			"Type": "String",
			"Default": "0.0",
			"MinLength": "3",
			"MaxLength": "10",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x/x"
		},
		"QAVPCBaseRange": {
			"Description": "Enter first two numbers of the CIDR Block Range. Example 10.48",
			"Type": "String",
			"Default": "172.0",
			"MinLength": "3",
			"MaxLength": "7",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be valid IP CIDR range of the form x.x"
		},
		"QAVPCEndingRange": {
			"Description": "Enter the last numbers of the CIDR Block Range. Example 200.0/22",
			"Type": "String",
			"Default": "0.0",
			"MinLength": "3",
			"MaxLength": "10",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x/x"
		},
		"ProdVPCBaseRange": {
			"Description": "Enter first two numbers of the CIDR Block Range. Example 10.48",
			"Type": "String",
			"Default": "81.0",
			"MinLength": "3",
			"MaxLength": "7",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be valid IP CIDR range of the form x.x"
		},
		"ProdVPCEndingRange": {
			"Description": "Enter the last numbers of the CIDR Block Range. Example 200.0/22",
			"Type": "String",
			"Default": "0.0",
			"MinLength": "3",
			"MaxLength": "10",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x/x"
		},
		"MSVPCBaseRange": {
			"Description": "Enter first two numbers of the CIDR Block Range. Example 10.48",
			"Type": "String",
			"Default": "215.0",
			"MinLength": "3",
			"MaxLength": "10",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be valid IP CIDR range of the form x.x"
		},
		"MSVPCEndingRange": {
			"Description": "Enter the last numbers of the CIDR Block Range. Example 200.0/22",
			"Type": "String",
			"Default": "0.0",
			"MinLength": "3",
			"MaxLength": "10",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x/x"
		}
	},
	"Resources": {
		"MSFlowLogRole": {
			"Type": "AWS::IAM::Role",
			"DependsOn": "MSFlowLogsGroup",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"vpc-flow-logs.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"Path": "/",
				"Policies": [
					{
						"PolicyName": "root",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"logs:CreateLogGroup",
										"logs:CreateLogStream",
										"logs:PutLogEvents",
										"logs:DescribeLogGroups",
										"logs:DescribeLogStreams"
									],
									"Resource": "*"
								}
							]
						}
					}
				]
			}
		},
		"MSFlowLogsGroup": {
			"Type": "AWS::Logs::LogGroup",
			"Properties": {
				"RetentionInDays": "7"
			}
		},
		"MSVPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".",
							{
								"Ref": "MSVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": " MS VPC"
					},
					{
						"Key": "Role",
						"Value": "MS"
					}
				]
			}
		},
		"MSVPCFlowLog": {
			"Type": "AWS::EC2::FlowLog",
			"DependsOn": "MSFlowLogRole",
			"Properties": {
				"DeliverLogsPermissionArn": {
					"Fn::GetAtt": [
						"MSFlowLogRole",
						"Arn"
					]
				},
				"LogGroupName": {
					"Ref": "MSFlowLogsGroup"
				},
				"ResourceId": {
					"Ref": "MSVPC"
				},
				"ResourceType": "VPC",
				"TrafficType": "ALL"
			}
		},
		"BastionSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "M&S Server Security Group",
				"VpcId": {
					"Ref": "MSVPC"
				},
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
						"ToPort": "22",
						"Description" : "Open to Internet",
                        "CidrIp":   "0.0.0.0/0"
                   }
				],
				"Tags": [
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "BastionSG"
                    }
                ]
			}
		},
		"MSPrivRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "MSVPC",
			"Properties": {
				"VpcId": {
					"Ref": "MSVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "MS Private Route Table"
					},
					{
						"Key": "Role",
						"Value": "Private Internal Traffic"
					}
				]
			}
		},
		"MSPublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "MSVPC",
			"Properties": {
				"VpcId": {
					"Ref": "MSVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "MS Public Route Table"
					},
					{
						"Key": "Role",
						"Value": "Public Traffic"
					}
				]
			}
		},
		"PubMSSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "MSVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "MSVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".16.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "MS-Public-A"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubMSSubnet": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubMSSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "MSPublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubMSSubnetA"
				}
			}
		},
		"PubMSSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "PubMSSubnetA",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "MSVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".24.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "MS-Public-B"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubMSSubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubMSSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "MSPublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubMSSubnetB"
				}
			}
		},
		"MSPrivSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "MSVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "MSVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".0.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "MS-Priv-A"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivMSSubnetA": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "MSPrivSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "MSPrivRouteTable"
				},
				"SubnetId": {
					"Ref": "MSPrivSubnetA"
				}
			}
		},
		"MSPrivSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "MSVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "MSVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".8.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "MS-Priv-B"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivMSSubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "MSPrivSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "MSPrivRouteTable"
				},
				"SubnetId": {
					"Ref": "MSPrivSubnetB"
				}
			}
		},
		"MSDevPrivPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "DevVPCBaseRange"
							},
							".",
							{
								"Ref": "DevVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "MSPrivRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "DevPeeringConnection"
				}
			}
		},
		"MSQAPrivPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "QAVPCBaseRange"
							},
							".",
							{
								"Ref": "QAVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "MSPrivRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "QAPeeringConnection"
				}
			}
		},
		"MSProdPrivPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "ProdVPCBaseRange"
							},
							".",
							{
								"Ref": "ProdVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "MSPrivRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "ProdPeeringConnection"
				}
			}
		},
		"MSDevPubPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "DevVPCBaseRange"
							},
							".",
							{
								"Ref": "DevVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "MSPublicRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "DevPeeringConnection"
				}
			}
		},
		"MSQAPubPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "QAVPCBaseRange"
							},
							".",
							{
								"Ref": "QAVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "MSPublicRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "QAPeeringConnection"
				}
			}
		},
		"MSProdPubPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "ProdVPCBaseRange"
							},
							".",
							{
								"Ref": "ProdVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "MSPublicRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "ProdPeeringConnection"
				}
			}
		},
		"MSVPCIGW": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": "MSVPC-IGW"
					}
				]
			}
		},
		"AttachMSIGW": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"DependsOn": "MSVPCIGW",
			"Properties": {
				"InternetGatewayId": {
					"Ref": "MSVPCIGW"
				},
				"VpcId": {
					"Ref": "MSVPC"
				}
			}
		},
		"MSIGWRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "MSVPCIGW"
				},
				"RouteTableId": {
					"Ref": "MSPublicRouteTable"
				}
			}
		},
		"MSNatGatewayEIPA": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": {
					"Ref": "MSVPC"
				}
			}
		},
		"MSNatGatewayA": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"SubnetId": {
					"Ref": "PubMSSubnetA"
				},
				"AllocationId": {
					"Fn::GetAtt": [
						"MSNatGatewayEIPA",
						"AllocationId"
					]
				}
			}
		},
		"MSPrivNATRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"RouteTableId": {
					"Ref": "MSPrivRouteTable"
				},
				"NatGatewayId": {
					"Ref": "MSNatGatewayA"
				}
			}
		},


		"DevFlowLogRole": {
			"Type": "AWS::IAM::Role",
			"DependsOn": "DevFlowLogsGroup",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"vpc-flow-logs.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"Path": "/",
				"Policies": [
					{
						"PolicyName": "root",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"logs:CreateLogGroup",
										"logs:CreateLogStream",
										"logs:PutLogEvents",
										"logs:DescribeLogGroups",
										"logs:DescribeLogStreams"
									],
									"Resource": "*"
								}
							]
						}
					}
				]
			}
		},
		"DevFlowLogsGroup": {
			"Type": "AWS::Logs::LogGroup",
			"Properties": {
				"RetentionInDays": "7"
			}
		},
		"DevelopmentVPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "DevVPCBaseRange"
							},
							".",
							{
								"Ref": "DevVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": " Development VPC"
					},
					{
						"Key": "Role",
						"Value": "Development"
					}
				]
			}
		},
		"DevVPCFlowLog": {
			"Type": "AWS::EC2::FlowLog",
			"DependsOn": "DevFlowLogRole",
			"Properties": {
				"DeliverLogsPermissionArn": {
					"Fn::GetAtt": [
						"DevFlowLogRole",
						"Arn"
					]
				},
				"LogGroupName": {
					"Ref": "DevFlowLogsGroup"
				},
				"ResourceId": {
					"Ref": "DevelopmentVPC"
				},
				"ResourceType": "VPC",
				"TrafficType": "ALL"
			}
		},
		"DevelopmentPrivRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "DevelopmentVPC",
			"Properties": {
				"VpcId": {
					"Ref": "DevelopmentVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Development Private Route Table"
					},
					{
						"Key": "Role",
						"Value": "Private Internal Traffic"
					}
				]
			}
		},
		"DevPeeringConnection": {
			"Type": "AWS::EC2::VPCPeeringConnection",
			"Properties": {
				"VpcId": {
					"Ref": "DevelopmentVPC"
				},
				"PeerVpcId": {
					"Ref": "MSVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": " Dev Peer to M&S"
					}
				]
			}
		},
		"DevPrivPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".",
							{
								"Ref": "MSVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "DevelopmentPrivRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "DevPeeringConnection"
				}
			}
		},
		"DevPrivNATRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"RouteTableId": {
					"Ref": "DevelopmentPrivRouteTable"
				},
				"NatGatewayId": {
					"Ref": "DevNatGatewayA"
				}
			}
		},
		"DevelopmentPublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "DevelopmentVPC",
			"Properties": {
				"VpcId": {
					"Ref": "DevelopmentVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Development Public Route Table"
					},
					{
						"Key": "Role",
						"Value": "Public Traffic"
					}
				]
			}
		},
		"DevIGWRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "DevVPCIGW"
				},
				"RouteTableId": {
					"Ref": "DevelopmentPublicRouteTable"
				}
			}
		},
		"DevPubPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".",
							{
								"Ref": "MSVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "DevelopmentPublicRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "DevPeeringConnection"
				}
			}
		},
		"PubDevSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "DevelopmentVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "DevelopmentVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "DevVPCBaseRange"
							},
							".16.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Development-Public-A"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubDevSubnetA": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubDevSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "DevelopmentPublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubDevSubnetA"
				}
			}
		},
		"PubDevSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "DevelopmentVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "DevelopmentVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "DevVPCBaseRange"
							},
							".24.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Development-Public-B"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubDevSubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubDevSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "DevelopmentPublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubDevSubnetB"
				}
			}
		},
		"DevPrivSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "DevelopmentVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "DevelopmentVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "DevVPCBaseRange"
							},
							".0.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Development-Priv-A"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivDevSubnetA": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "DevPrivSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "DevelopmentPrivRouteTable"
				},
				"SubnetId": {
					"Ref": "DevPrivSubnetA"
				}
			}
		},
		"DevPrivSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "DevelopmentVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "DevelopmentVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "DevVPCBaseRange"
							},
							".8.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Development-Priv-B"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivDevSubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "DevPrivSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "DevelopmentPrivRouteTable"
				},
				"SubnetId": {
					"Ref": "DevPrivSubnetB"
				}
			}
		},
		"DevVPCIGW": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": "DevVPC-IGW"
					}
				]
			}
		},
		"AttachDevIGW": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"DependsOn": "DevVPCIGW",
			"Properties": {
				"InternetGatewayId": {
					"Ref": "DevVPCIGW"
				},
				"VpcId": {
					"Ref": "DevelopmentVPC"
				}
			}
		},
		"DevNatGatewayEIPA": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": {
					"Ref": "DevelopmentVPC"
				}
			}
		},
		"DevNatGatewayA": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"SubnetId": {
					"Ref": "PubDevSubnetA"
				},
				"AllocationId": {
					"Fn::GetAtt": [
						"DevNatGatewayEIPA",
						"AllocationId"
					]
				}
			}
		},
		"DevS3VPCEndpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Properties": {
				"RouteTableIds": [
					{
						"Ref": "DevelopmentPrivRouteTable"
					}
				],
				"ServiceName": {
					"Fn::Join": [
						"",
						[
							"com.amazonaws.",
							{
								"Ref": "AWS::Region"
							},
							".s3"
						]
					]
				},
				"VpcId": {
					"Ref": "DevelopmentVPC"
				}
			}
        },
        


		"QAFlowLogRole": {
			"Type": "AWS::IAM::Role",
			"DependsOn": "QAFlowLogsGroup",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"vpc-flow-logs.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"Path": "/",
				"Policies": [
					{
						"PolicyName": "root",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"logs:CreateLogGroup",
										"logs:CreateLogStream",
										"logs:PutLogEvents",
										"logs:DescribeLogGroups",
										"logs:DescribeLogStreams"
									],
									"Resource": "*"
								}
							]
						}
					}
				]
			}
		},
		"QAFlowLogsGroup": {
			"Type": "AWS::Logs::LogGroup",
			"Properties": {
				"RetentionInDays": "7"
			}
		},
		"QAVPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "QAVPCBaseRange"
							},
							".",
							{
								"Ref": "QAVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "QA VPC"
					},
					{
						"Key": "Role",
						"Value": "QA"
					}
				]
			}
		},
		"QAVPCFlowLog": {
			"Type": "AWS::EC2::FlowLog",
			"DependsOn": "QAFlowLogRole",
			"Properties": {
				"DeliverLogsPermissionArn": {
					"Fn::GetAtt": [
						"QAFlowLogRole",
						"Arn"
					]
				},
				"LogGroupName": {
					"Ref": "QAFlowLogsGroup"
				},
				"ResourceId": {
					"Ref": "QAVPC"
				},
				"ResourceType": "VPC",
				"TrafficType": "ALL"
			}
		},
		"QAPrivRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "QAVPC",
			"Properties": {
				"VpcId": {
					"Ref": "QAVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "QA Private Route Table"
					},
					{
						"Key": "Role",
						"Value": "Private Internal Traffic"
					}
				]
			}
		},
		"QAPeeringConnection": {
			"Type": "AWS::EC2::VPCPeeringConnection",
			"Properties": {
				"VpcId": {
					"Ref": "QAVPC"
				},
				"PeerVpcId": {
					"Ref": "MSVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": " QA Peer to M&S"
					}
				]
			}
		},
		"QAPrivPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".",
							{
								"Ref": "MSVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "QAPrivRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "QAPeeringConnection"
				}
			}
		},
		"QAPrivNATRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"RouteTableId": {
					"Ref": "QAPrivRouteTable"
				},
				"NatGatewayId": {
					"Ref": "QANatGatewayA"
				}
			}
		},
		"QAPublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "QAVPC",
			"Properties": {
				"VpcId": {
					"Ref": "QAVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "QA Public Route Table"
					},
					{
						"Key": "Role",
						"Value": "Public Traffic"
					}
				]
			}
		},
		"QAPubPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".",
							{
								"Ref": "MSVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "QAPublicRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "QAPeeringConnection"
				}
			}
		},
		"QAIGWRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "QAVPCIGW"
				},
				"RouteTableId": {
					"Ref": "QAPublicRouteTable"
				}
			}
		},
		"PubQASubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "QAVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "QAVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "QAVPCBaseRange"
							},
							".16.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "QA-Public-A"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubQASubnetA": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubQASubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "QAPublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubQASubnetA"
				}
			}
		},
		"PubQASubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "QAVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "QAVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "QAVPCBaseRange"
							},
							".24.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "QA-Public-B"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubQASubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubQASubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "QAPublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubQASubnetB"
				}
			}
		},
		"QAPrivSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "QAVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "QAVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "QAVPCBaseRange"
							},
							".0.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "QA-Priv-A"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivQASubnetA": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "QAPrivSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "QAPrivRouteTable"
				},
				"SubnetId": {
					"Ref": "QAPrivSubnetA"
				}
			}
		},
		"QAPrivSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "QAVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "QAVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "QAVPCBaseRange"
							},
							".8.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "QA-Priv-B"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivQASubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "QAPrivSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "QAPrivRouteTable"
				},
				"SubnetId": {
					"Ref": "QAPrivSubnetB"
				}
			}
		},
		"QAVPCIGW": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": "QAVPC-IGW"
					}
				]
			}
		},
		"AttachQAIGW": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"DependsOn": "QAVPCIGW",
			"Properties": {
				"InternetGatewayId": {
					"Ref": "QAVPCIGW"
				},
				"VpcId": {
					"Ref": "QAVPC"
				}
			}
		},
		"QANatGatewayEIPA": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": {
					"Ref": "QAVPC"
				}
			}
		},
		"QANatGatewayA": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"SubnetId": {
					"Ref": "PubQASubnetA"
				},
				"AllocationId": {
					"Fn::GetAtt": [
						"QANatGatewayEIPA",
						"AllocationId"
					]
				}
			}
		},
		"QAS3VPCEndpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Properties": {
				"RouteTableIds": [
					{
						"Ref": "QAPrivRouteTable"
					}
				],
				"ServiceName": {
					"Fn::Join": [
						"",
						[
							"com.amazonaws.",
							{
								"Ref": "AWS::Region"
							},
							".s3"
						]
					]
				},
				"VpcId": {
					"Ref": "QAVPC"
				}
			}
        },
        

        
		"ProdFlowLogRole": {
			"Type": "AWS::IAM::Role",
			"DependsOn": "ProdFlowLogsGroup",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"vpc-flow-logs.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"Path": "/",
				"Policies": [
					{
						"PolicyName": "root",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"logs:CreateLogGroup",
										"logs:CreateLogStream",
										"logs:PutLogEvents",
										"logs:DescribeLogGroups",
										"logs:DescribeLogStreams"
									],
									"Resource": "*"
								}
							]
						}
					}
				]
			}
		},
		"ProdFlowLogsGroup": {
			"Type": "AWS::Logs::LogGroup",
			"Properties": {
				"RetentionInDays": "7"
			}
		},
		"ProdVPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "ProdVPCBaseRange"
							},
							".",
							{
								"Ref": "ProdVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Prod VPC"
					},
					{
						"Key": "Role",
						"Value": "Prod"
					}
				]
			}
		},
		"ProdVPCFlowLog": {
			"Type": "AWS::EC2::FlowLog",
			"DependsOn": "ProdFlowLogRole",
			"Properties": {
				"DeliverLogsPermissionArn": {
					"Fn::GetAtt": [
						"ProdFlowLogRole",
						"Arn"
					]
				},
				"LogGroupName": {
					"Ref": "ProdFlowLogsGroup"
				},
				"ResourceId": {
					"Ref": "ProdVPC"
				},
				"ResourceType": "VPC",
				"TrafficType": "ALL"
			}
		},
		"ProdServerSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Prod Server Security Group",
				"VpcId": {
					"Ref": "ProdVPC"
				}
			}
		},
		"ProdLoadBalancerSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Prod Load Balancer Security Group",
				"VpcId": {
					"Ref": "ProdVPC"
				},
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "443",
						"ToPort": "443",
						"Description" : "Open to Internet",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "8443",
						"ToPort": "8443",
						"Description" : "Open to Internet",
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		},
		"ProdPrivRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "ProdVPC",
			"Properties": {
				"VpcId": {
					"Ref": "ProdVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Prod Private Route Table"
					},
					{
						"Key": "Role",
						"Value": "Private Internal Traffic"
					}
				]
			}
		},
		"ProdPeeringConnection": {
			"Type": "AWS::EC2::VPCPeeringConnection",
			"Properties": {
				"VpcId": {
					"Ref": "ProdVPC"
				},
				"PeerVpcId": {
					"Ref": "MSVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": " Prod Peer to M&S"
					}
				]
			}
		},
		"ProdPrivPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".",
							{
								"Ref": "MSVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "ProdPrivRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "ProdPeeringConnection"
				}
			}
		},
		"ProdPrivNATRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"RouteTableId": {
					"Ref": "ProdPrivRouteTable"
				},
				"NatGatewayId": {
					"Ref": "ProdNatGatewayA"
				}
			}
		},
		"ProdPublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "ProdVPC",
			"Properties": {
				"VpcId": {
					"Ref": "ProdVPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Prod Public Route Table"
					},
					{
						"Key": "Role",
						"Value": "Public Traffic"
					}
				]
			}
		},
		"ProdPubPeeringRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "MSVPCBaseRange"
							},
							".",
							{
								"Ref": "MSVPCEndingRange"
							},
							"/19"
						]
					]
				},
				"RouteTableId": {
					"Ref": "ProdPublicRouteTable"
				},
				"VpcPeeringConnectionId": {
					"Ref": "ProdPeeringConnection"
				}
			}
		},
		"ProdIGWRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "ProdVPCIGW"
				},
				"RouteTableId": {
					"Ref": "ProdPublicRouteTable"
				}
			}
		},
		"PubProdSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "ProdVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "ProdVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "ProdVPCBaseRange"
							},
							".16.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Prod-Public-A"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubProdSubnetA": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubProdSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "ProdPublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubProdSubnetA"
				}
			}
		},
		"PubProdSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "ProdVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "ProdVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "ProdVPCBaseRange"
							},
							".24.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Prod-Public-B"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubProdSubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubProdSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "ProdPublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubProdSubnetB"
				}
			}
		},
		"ProdPrivSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "ProdVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "ProdVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "ProdVPCBaseRange"
							},
							".0.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Prod-Priv-A"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivProdSubnetA": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "ProdPrivSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "ProdPrivRouteTable"
				},
				"SubnetId": {
					"Ref": "ProdPrivSubnetA"
				}
			}
		},
		"ProdPrivSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "ProdVPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "ProdVPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "ProdVPCBaseRange"
							},
							".8.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "Prod-Priv-B"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivProdSubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "ProdPrivSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "ProdPrivRouteTable"
				},
				"SubnetId": {
					"Ref": "ProdPrivSubnetB"
				}
			}
		},
		"ProdVPCIGW": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": "ProdVPC-IGW"
					}
				]
			}
		},
		"AttachProdIGW": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"DependsOn": "ProdVPCIGW",
			"Properties": {
				"InternetGatewayId": {
					"Ref": "ProdVPCIGW"
				},
				"VpcId": {
					"Ref": "ProdVPC"
				}
			}
		},
		"ProdNatGatewayEIPA": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": {
					"Ref": "ProdVPC"
				}
			}
		},
		"ProdNatGatewayA": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"SubnetId": {
					"Ref": "PubProdSubnetA"
				},
				"AllocationId": {
					"Fn::GetAtt": [
						"ProdNatGatewayEIPA",
						"AllocationId"
					]
				}
			}
		},
		"ProdS3VPCEndpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Properties": {
				"RouteTableIds": [
					{
						"Ref": "ProdPrivRouteTable"
					}
				],
				"ServiceName": {
					"Fn::Join": [
						"",
						[
							"com.amazonaws.",
							{
								"Ref": "AWS::Region"
							},
							".s3"
						]
					]
				},
				"VpcId": {
					"Ref": "ProdVPC"
				}
			}
		},
		"CTS3Bucket": {
			"DeletionPolicy": "Retain",
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": "cloudtrail-logs-bkt-2353"
			}
		},
		"BucketPolicy": {
			"Type": "AWS::S3::BucketPolicy",
			"Properties": {
				"Bucket": {
					"Ref": "CTS3Bucket"
				},
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Sid": "AWSCloudTrailAclCheck",
							"Effect": "Allow",
							"Principal": {
								"Service": "cloudtrail.amazonaws.com"
							},
							"Action": "s3:GetBucketAcl",
							"Resource": {
								"Fn::Join": [
									"",
									[
										"arn:aws:s3:::",
										{
											"Ref": "CTS3Bucket"
										}
									]
								]
							}
						},
						{
							"Sid": "AWSCloudTrailWrite",
							"Effect": "Allow",
							"Principal": {
								"Service": "cloudtrail.amazonaws.com"
							},
							"Action": "s3:PutObject",
							"Resource": {
								"Fn::Join": [
									"",
									[
										"arn:aws:s3:::",
										{
											"Ref": "CTS3Bucket"
										},
										"/AWSLogs/",
										{
											"Ref": "AWS::AccountId"
										},
										"/*"
									]
								]
							},
							"Condition": {
								"StringEquals": {
									"s3:x-amz-acl": "bucket-owner-full-control"
								}
							}
						}
					]
				}
			}
		},
		"myTrail": {
			"DependsOn": [
				"BucketPolicy"
			],
			"Type": "AWS::CloudTrail::Trail",
			"Properties": {
				"S3BucketName": {
					"Ref": "CTS3Bucket"
				},
				"IsLogging": true
			}
		}
	},
	"Outputs": {
		
		"DevelopmentVPCId": {
			"Description": "Dev VPC ID",
			"Value": {
				"Ref": "DevelopmentVPC"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-DevVPCID"
				}
			}
		},
		"DevelopmentVPCPubSubnetA": {
			"Description": "Dev-Public-Subnet",
			"Value": {
				"Ref": "PubDevSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-DevPublicSubnetA"
				}
			}
		},
		"DevelopmentVPCPubSubnetB": {
			"Description": "Dev-Public-Subnet",
			"Value": {
				"Ref": "PubDevSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-DevPublicSubnetB"
				}
			}
		},
		"DevPrivateSubnetA": {
			"Description": "The subnet ID to use for Development Hosts",
			"Value": {
				"Ref": "DevPrivSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-DevPrivSubnetAID"
				}
			}
        },
		"DevPrivateSubnetB": {
			"Description": "The subnet ID to use for Development Hosts",
			"Value": {
				"Ref": "DevPrivSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-DevPrivSubnetBID"
				}
			}
        },
        "DevVPCPrivSubnetA": {
			"Description": " Dev VPC Private Subnet A Cidr",
			"Value": {
				"Fn::Join" : [ ".", [{"Ref": "DevVPCBaseRange"}, "0.1/21"]]
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-DevVPCPrivSubnetA"
				}
            }
        },
        "DevVPCPrivSubnetB": {
                "Description": " Dev VPC Private Subnet B Cidr",
                "Value": {
                    "Fn::Join" : [ ".", [{"Ref": "DevVPCBaseRange"}, "8.1/21"]]
                },
                "Export": {
                    "Name": {
                        "Fn::Sub": "${AWS::StackName}-DevVPCPrivSubnetB"
                    }
                }
        },
    
     


		"QAVPCId": {
			"Description": "QA VPC ID",
			"Value": {
				"Ref": "QAVPC"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-QAVPCID"
				}
			}
		},
		"QAVPCPubSubnetA": {
			"Description": "QA-Public-Subnet",
			"Value": {
				"Ref": "PubQASubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-QAPublicSubnetID"
				}
			}
		},
		"QAVPCPubSubnetB": {
			"Description": "QA-Public-Subnet",
			"Value": {
				"Ref": "PubQASubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-QAPublicSubnetBID"
				}
			}
		},
		"QAPrivateSubnetA": {
			"Description": "The subnet ID to use for QA Hosts",
			"Value": {
				"Ref": "QAPrivSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-QAPrivSubnetAID"
				}
			}
		},
		"QAPrivateSubnetB": {
			"Description": "The subnet ID to use for QA Hosts",
			"Value": {
				"Ref": "QAPrivSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-QAPrivSubnetBID"
				}
			}
        },
        "QAVPCPrivSubnetA": {
			"Description": " QA VPC Private Subnet A Cidr",
			"Value": {
				"Fn::Join" : [ ".", [{"Ref": "QAVPCBaseRange"}, "0.1/21"]]
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-QAVPCPrivSubnetA"
				}
            }
        },
        "QAVPCPrivSubnetB": {
                "Description": " QA VPC Private Subnet B Cidr",
                "Value": {
                    "Fn::Join" : [ ".", [{"Ref": "QAVPCBaseRange"}, "8.1/21"]]
                },
                "Export": {
                    "Name": {
                        "Fn::Sub": "${AWS::StackName}-QAVPCPrivSubnetB"
                    }
                }
        },


		"ProdVPCId": {
			"Description": "Prod VPC ID",
			"Value": {
				"Ref": "ProdVPC"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-ProdVPCID"
				}
			}
		},
		"ProdVPCPubSubnetA": {
			"Description": "Prod-Public-Subnet",
			"Value": {
				"Ref": "PubProdSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-ProdPublicSubnetA"
				}
			}
		},
		"ProdVPCPubSubnetB": {
			"Description": "Prod-Public-Subnet",
			"Value": {
				"Ref": "PubProdSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-ProdPublicSubnetB"
				}
			}
		},
		"ProdPrivateSubnetA": {
			"Description": "The subnet ID to use for Production Hosts",
			"Value": {
				"Ref": "ProdPrivSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-ProdPrivSubnetAID"
				}
			}
		},
		"ProdPrivateSubnetB": {
			"Description": "The subnet ID to use for Production Hosts",
			"Value": {
				"Ref": "ProdPrivSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-ProdPrivSubnetBID"
				}
			}
        },
        "ProdVPCPrivSubnetA": {
			"Description": " Prod VPC Private Subnet A Cidr",
			"Value": {
				"Fn::Join" : [ ".", [{"Ref": "ProdVPCBaseRange"}, "0.1/21"]]
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-ProdVPCPrivSubnetA"
				}
            }
        },
        "ProdVPCPrivSubnetB": {
                "Description": " Prod VPC Private Subnet B Cidr",
                "Value": {
                    "Fn::Join" : [ ".", [{"Ref": "ProdVPCBaseRange"}, "8.1/21"]]
                },
                "Export": {
                    "Name": {
                        "Fn::Sub": "${AWS::StackName}-ProdVPCPrivSubnetB"
                    }
                }
        },
	



		"MSVPCId": {
			"Description": "MS VPC ID",
			"Value": {
				"Ref": "MSVPC"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-MSVPCID"
				}
			}
		},
		"MSVPCPubSubnetA": {
			"Description": "MS-Public-Subnet",
			"Value": {
				"Ref": "PubMSSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-MSPublicSubnetA"
				}
			}
		},
		"MSVPCPubSubnetB": {
			"Description": "MS-Public-Subnet",
			"Value": {
				"Ref": "PubMSSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-MSPublicSubnetB"
				}
			}
		},
		"MSPrivateSubnetA": {
			"Description": "MS-Private-Subnet",
			"Value": {
				"Ref": "MSPrivSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-MSPrivSubnetAID"
				}
			}
		},
		"MSPrivateSubnetB": {
			"Description": "MS-Private-Subnet",
			"Value": {
				"Ref": "MSPrivSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-MSPrivSubnetBID"
				}
			}
        },
        "MSVPCPrivSubnetA": {
			"Description": " MSVPC Private Subnet A Cidr",
			"Value": {
				"Fn::Join" : [ ".", [{"Ref": "MSVPCBaseRange"}, "0.1/21"]]
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-MSVPCPrivSubnetA"
				}
            }},
        "MSVPCPrivSubnetB": {
                "Description": " MS VPC Private Subnet B Cidr",
                "Value": {
                    "Fn::Join" : [ ".", [{"Ref": "MSVPCBaseRange"}, "8.1/21"]]
                },
                "Export": {
                    "Name": {
                        "Fn::Sub": "${AWS::StackName}-MSVPCPrivSubnetB"
                    }
                }
        },


		"BastionServerSG": {
			"Description": " Bastion Server Security Group",
			"Value": {
				"Ref": "BastionSecurityGroup"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-BastionSG"
				}
			}
		},
		"BastionPublicSubnet": {
			"Description": "The subnet ID to use for Bastion Hosts",
			"Value": {
				"Ref": "PubMSSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-BastionPubSubnetID"
				}
			}
		},
		"StackName": {
			"Description": "The networking stack name",
			"Value": {"Ref": "AWS::StackName"},
			"Export": {
				"Name": {
					"Fn::Sub": "VPCStack"
				}
			}
		}
	}
        }