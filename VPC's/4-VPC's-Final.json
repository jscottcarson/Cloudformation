{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Creates a VPC that each contain public and private subnets in 2 AZ's subnets.  Also creates an S3 bucket for account Clouddtrail logging and a Cloudtrail log. ",
	"Parameters": {
		"VPCBaseRange": {
			"Description": "Enter first two numbers of the CIDR Block Range. Example 10.48",
			"Type": "String",
			"Default": "12.0",
			"MinLength": "3",
			"MaxLength": "10",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be valid IP CIDR range of the form x.x"
		},
		"VPCEndingRange": {
			"Description": "Enter the last numbers of the CIDR Block Range. Example 200.0/22",
			"Type": "String",
			"Default": "0.0",
			"MinLength": "3",
			"MaxLength": "10",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x/x"
		}
	},
	"Resources": {
		"FlowLogRole": {
			"Type": "AWS::IAM::Role",
			"DependsOn": "FlowLogsGroup",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"vpc-flow-logs.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"Path": "/",
				"Policies": [
					{
						"PolicyName": "root",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"logs:CreateLogGroup",
										"logs:CreateLogStream",
										"logs:PutLogEvents",
										"logs:DescribeLogGroups",
										"logs:DescribeLogStreams"
									],
									"Resource": "*"
								}
							]
						}
					}
				]
			}
		},
		"FlowLogsGroup": {
			"Type": "AWS::Logs::LogGroup",
			"Properties": {
				"RetentionInDays": "7"
			}
		},
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "VPCBaseRange"
							},
							".",
							{
								"Ref": "VPCEndingRange"
							},
							"/19"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "VPC"
					}
					
				]
			}
		},
		"VPCFlowLog": {
			"Type": "AWS::EC2::FlowLog",
			"DependsOn": "FlowLogRole",
			"Properties": {
				"DeliverLogsPermissionArn": {
					"Fn::GetAtt": [
						"FlowLogRole",
						"Arn"
					]
				},
				"LogGroupName": {
					"Ref": "FlowLogsGroup"
				},
				"ResourceId": {
					"Ref": "elopmentVPC"
				},
				"ResourceType": "VPC",
				"TrafficType": "ALL"
			}
		},
		"PrivRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "VPC",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": " Private Route Table"
					},
					{
						"Key": "Role",
						"Value": "Private Internal Traffic"
					}
				]
			}
		},
		"PrivNATRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"RouteTableId": {
					"Ref": "PrivRouteTable"
				},
				"NatGatewayId": {
					"Ref": "NatGatewayA"
				}
			}
		},
		"PublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": "VPC",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": " Public Route Table"
					},
					{
						"Key": "Role",
						"Value": "Public Traffic"
					}
				]
			}
		},
		"IGWRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "VPCIGW"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"PubSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "VPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "VPCBaseRange"
							},
							".16.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "-Public-A"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubSubnetA": { 
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubSubnetA"
				}
			}
		},
		"PubSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "VPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "VPCBaseRange"
							},
							".24.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "-Public-B"
					},
					{
						"Key": "Role",
						"Value": "Public"
					}
				]
			}
		},
		"AttachPubSubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PubSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PubSubnetB"
				}
			}
		},
		"PrivSubnetA": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "VPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"a"
						]
					]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "VPCBaseRange"
							},
							".0.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "-Priv-A"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivSubnetA": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PrivSubnetA",
			"Properties": {
				"RouteTableId": {
					"Ref": "PrivRouteTable"
				},
				"SubnetId": {
					"Ref": "PrivSubnetA"
				}
			}
		},
		"PrivSubnetB": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": "VPC",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "AWS::Region"
							},
							"b"
						]
					]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::Join": [
						"",
						[
							{
								"Ref": "VPCBaseRange"
							},
							".8.1/21"
						]
					]
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "-Priv-B"
					},
					{
						"Key": "Role",
						"Value": "Private"
					}
				]
			}
		},
		"AttachPrivSubnetB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": "PrivSubnetB",
			"Properties": {
				"RouteTableId": {
					"Ref": "PrivRouteTable"
				},
				"SubnetId": {
					"Ref": "PrivSubnetB"
				}
			}
		},
		"VPCIGW": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": "VPC-IGW"
					}
				]
			}
		},
		"AttachIGW": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"DependsOn": "VPCIGW",
			"Properties": {
				"InternetGatewayId": {
					"Ref": "VPCIGW"
				},
				"VpcId": {
					"Ref": "VPC"
				}
			}
		},
		"NatGatewayEIPA": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": {
					"Ref": "VPC"
				}
			}
		},
		"NatGatewayA": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"SubnetId": {
					"Ref": "PubSubnetA"
				},
				"AllocationId": {
					"Fn::GetAtt": [
						"NatGatewayEIPA",
						"AllocationId"
					]
				}
			}
		},
		"S3VPCEndpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Properties": {
				"RouteTableIds": [
					{
						"Ref": "PrivRouteTable"
					}
				],
				"ServiceName": {
					"Fn::Join": [
						"",
						[
							"com.amazonaws.",
							{
								"Ref": "AWS::Region"
							},
							".s3"
						]
					]
				},
				"VpcId": {
					"Ref": "VPC"
				}
			}
		},
		"CTS3Bucket": {
			"DeletionPolicy": "Retain",
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": "cloudtrail-logs-bkt-2353"
			}
		},
		"BucketPolicy": {
			"Type": "AWS::S3::BucketPolicy",
			"Properties": {
				"Bucket": {
					"Ref": "CTS3Bucket"
				},
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Sid": "AWSCloudTrailAclCheck",
							"Effect": "Allow",
							"Principal": {
								"Service": "cloudtrail.amazonaws.com"
							},
							"Action": "s3:GetBucketAcl",
							"Resource": {
								"Fn::Join": [
									"",
									[
										"arn:aws:s3:::",
										{
											"Ref": "CTS3Bucket"
										}
									]
								]
							}
						},
						{
							"Sid": "AWSCloudTrailWrite",
							"Effect": "Allow",
							"Principal": {
								"Service": "cloudtrail.amazonaws.com"
							},
							"Action": "s3:PutObject",
							"Resource": {
								"Fn::Join": [
									"",
									[
										"arn:aws:s3:::",
										{
											"Ref": "CTS3Bucket"
										},
										"/AWSLogs/",
										{
											"Ref": "AWS::AccountId"
										},
										"/*"
									]
								]
							},
							"Condition": {
								"StringEquals": {
									"s3:x-amz-acl": "bucket-owner-full-control"
								}
							}
						}
					]
				}
			}
		},
		"myTrail": {
			"DependsOn": [
				"BucketPolicy"
			],
			"Type": "AWS::CloudTrail::Trail",
			"Properties": {
				"S3BucketName": {
					"Ref": "CTS3Bucket"
				},
				"IsLogging": true
			}
		}
	},
	"Outputs": {
		"VPCId": {
			"Description": " VPC ID",
			"Value": {
				"Ref": "VPC"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-VPCID"
				}
			}
		},
		"VPCPubSubnetA": {
			"Description": "-Public-Subnet",
			"Value": {
				"Ref": "PubSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-PublicSubnetA"
				}
			}
		},
		"VPCPubSubnetB": {
			"Description": "-Public-Subnet",
			"Value": {
				"Ref": "PubSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-PublicSubnetB"
				}
			}
		},
		"PrivateSubnetA": {
			"Description": "The subnet ID to use for  Hosts",
			"Value": {
				"Ref": "PrivSubnetA"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-PrivSubnetAID"
				}
			}
		},
		"PrivateSubnetB": {
			"Description": "The subnet ID to use for  Hosts",
			"Value": {
				"Ref": "PrivSubnetB"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-PrivSubnetBID"
				}
			}
		},
		"VPCPrivSubnetA": {
			"Description": "  VPC Private Subnet A Cidr",
			"Value": {
				"Fn::Join": [
					".",
					[
						{
							"Ref": "VPCBaseRange"
						},
						"0.1/21"
					]
				]
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-VPCPrivSubnetA"
				}
			}
		},
		"VPCPrivSubnetB": {
			"Description": "  VPC Private Subnet B Cidr",
			"Value": {
				"Fn::Join": [
					".",
					[
						{
							"Ref": "VPCBaseRange"
						},
						"8.1/21"
					]
				]
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-VPCPrivSubnetB"
				}
			}
		}
	}
}