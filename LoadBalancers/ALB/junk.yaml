 ApplicationLoadBalancer:
        Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
        Properties:
            SecurityGroups:
                - 
                    Ref: ALBSecurityGroup
            Subnets:
              - Ref: PublicSubnetA
              - Ref: PublicSubnetB
            Tags:
                - 
                    Key: Name
                    Value: 
                        !Join [ "-", [ Ref: CustomerName, ALB1 ] ]                       
    ALBListener:
        Type: 'AWS::ElasticLoadBalancingV2::Listener'
        Properties:
            DefaultActions:
                - 
                    Type: forward
                    TargetGroupArn:
                        Ref: ALBTargetGroup
            LoadBalancerArn:
                Ref: ApplicationLoadBalancer
            Port: '80'
            Protocol: HTTP
    ALBTargetGroup:
        Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
        Properties:
            HealthCheckPath: /
            HealthCheckIntervalSeconds: 10
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId:
                Ref: VPCName
            TargetGroupAttributes:
                - 
                    Key: stickiness.enabled
                    Value: 'true'
                - 
                    Key: stickiness.type
                    Value: lb_cookie
                - 
                    Key: stickiness.lb_cookie.duration_seconds
                    Value: '30'